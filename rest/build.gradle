apply plugin: 'java'
apply plugin: 'eclipse'

jar {
	baseName = 'rest'
	version =  '1.0.0'
}

/* force the use of the command line compiler and pass option to avoid complaints about internal APIs */
compileTestJava {
	options.compilerArgs = ['-XDignore.symbol.file=true']
    options.fork = true // may not needed on 1.8
    options.forkOptions.executable = 'javac' // may not needed on 1.8
}

dependencies {
	compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:$jacksonVersion")
	compile("org.springframework.hateoas:spring-hateoas:$springHateosVersion") 
	compile("org.springframework.plugin:spring-plugin-core:$springPluginVersion")
	compile("org.springframework.security:spring-security-config:$springSecurityVersion")
	compile("org.springframework.security:spring-security-web:$springSecurityVersion")
	compile("org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion")
	compile("com.jayway.jsonpath:json-path:$jsonpathVersion")
	compile("ch.qos.logback:logback-access:$logbackVersion")
	runtime("joda-time:joda-time:$jodatimeVersion")
	testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
	testCompile("org.apache.httpcomponents:httpclient:4.3.2")
	testCompile("org.apache.httpcomponents:httpcore:4.3.2")
}

