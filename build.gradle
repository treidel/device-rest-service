def versionOverrides = [
	"org.springframework:spring-core": "4.1.3.RELEASE",
	"org.springframework:spring-tx": "4.1.3.RELEASE",
	"org.springframework:spring-aop": "4.1.3.RELEASE",
	"org.springframework:spring-context": "4.1.3.RELEASE",
	"org.springframework:spring-jms": "4.1.3.RELEASE",
	"org.springframework:spring-web": "4.1.3.RELEASE",
	"org.springframework:spring-webmvc": "4.1.3.RELEASE",
	"org.springframework:spring-test" : "4.1.3.RELEASE",
	"org.springframework:spring-beans": "4.1.3.RELEASE",	
	"org.springframework:spring-websocket": "4.1.3.RELEASE",	
	"org.springframework:spring-messaging": "4.1.3.RELEASE",
	"org.springframework.data:spring-data-commons":"1.8.0.RELEASE",
	"org.springframework.hateoas:spring-hateoas":"0.16.0.RELEASE",
	"org.springframework.plugin:spring-plugin-core":"1.1.0.RELEASE",
	"org.springframework.security:spring-security-core":"4.0.0.RC1",
	"org.springframework.security:spring-security-config":"4.0.0.RC1",
	"org.springframework.security:spring-security-web":"4.0.0.RC1",	
	"org.springframework.security:spring-security-messaging":"4.0.0.RC1",
	"org.springframework.session:spring-session":"1.0.0.RELEASE",
	"org.springframework.boot:spring-boot-gradle-plugin":"1.1.8.RELEASE",
	"org.springframework.boot:spring-boot-starter":"1.1.8.RELEASE",
	"org.springframework.boot:spring-boot-starter-test":"1.1.8.RELEASE",
	"org.springframework.boot:spring-boot-starter-websocket":"1.1.8.RELEASE", 
	"org.apache.activemq:activemq-spring" : "5.10.1",
	"org.apache.storm:storm-core" : "0.9.2-incubating",
	"org.apache.curator:curator-framework" : "2.6.0",
	"org.apache.commons:commons-lang3" : "3.3.2",
	"org.apache.httpcomponents:httpclient" : "4.3.2",
	"org.apache.httpcomponents:httpcore" : "4.3.2",
	"org.apache.james:apache-mime4j":"0.7.2",
	"org.clojars.reideltj:kinesis-storm-spout":"1.0.4-SNAPSHOT",
	"org.slf4j:slf4j-api":"1.7.7",
	"com.jayway.jsonpath:json-path":"0.9.1",	
	"com.amazonaws:aws-java-sdk" : "1.9.16",	
	"com.esotericsoftware.kryo:kryo" : "2.24.0",	
	"com.h2database:h2" : "1.4.185",
	"com.fasterxml.jackson.core:jackson-databind" : "2.4.3",
	"com.fasterxml.jackson.datatype:jackson-datatype-joda" : "2.4.3",
	"com.rabbitmq:amqp-client" : "3.4.3",	
	"com.beust:jcommander":"1.35",
	"commons-beanutils:commons-beanutils":"1.9.2",	
	"joda-type:joda-time" : "2.7",	
	"junit:junit":"4.12"
	
]

subprojects {
	apply plugin: 'java'
	group = 'com.fancypants'
	version = '1.0'

	repositories {
		mavenCentral()
		maven { url "http://repo.spring.io/libs-release" }
		maven { url "http://clojars.org/repo" }
		maven { url "http://repository-opensourceagility.forge.cloudbees.com/snapshot" }
	}
	
	dependencies {
		compile("org.slf4j:slf4j-api")
	}

	configurations.all {
		resolutionStrategy.eachDependency { DependencyResolveDetails details ->
			def overrideVersion = versionOverrides[details.requested.group + ":" + details.requested.name]
			if (overrideVersion != null && details.requested.version != overrideVersion) {
				logger.info "Overriding dependency ${details.requested.group}:${details.requested.name} version ${details.requested.version} --> $overrideVersion"
				details.useVersion overrideVersion
			}		
		}
   	}
}

project(':data') { 
	dependencies {
		compile project(':common')
	}
}

project(':data-dynamodb') {
	dependencies {
		compile project(':common')
		compile project(':data')
	}
}

project(':rest') {
        dependencies {
                compile project(':common')
		compile project(':data')
		compile project(':device')
        }
}

project(':stream') {	
	dependencies {
		compile project(':common')
		testCompile project(':data')
	}
}

project(':stream-kinesis') {
	dependencies {
		compile project(':common')
		compile project(':stream')
		compile project(':data')
	}
}

project(':message') {
	dependencies {
		compile project(':common')
	}
}

project(':message-rabbitmq') {
	dependencies {
		compile project(':common')
		compile project(':message')
	}
}

project(':device') { 
	dependencies {
		compile project(':common')
		compile project(':data')
		compile project(':stream')
		compile project(':message')
	}
}

project(':records') { 
	dependencies {
		compile project(':common')
		compile project(':device')
	}
}

project(':usage') {
	dependencies {
		compile project(':common')
		compile project(':device')
	}
}

project(':rest-device') {
	dependencies {
		compile project(':common')
		compile project(':rest')
		compile project(':records')
		compile project(':usage')
		compile project(':data')
		compile project(':stream')
	}
}

project(':app') {
	dependencies {
		compile project(':common')
		compile project(':data')
		compile project(':device')
	}
}

project(':rest-app') {
	dependencies {
		compile project(':common')
		compile project(':rest')
		compile project(':app')
		compile project(':usage')
		compile project(':data')
	}
}

project(':storm') {
	dependencies {
		compile project(':common')
		compile project(':records')
	}
}

project(':storm-kinesis') {
	dependencies {
		compile project(':common')
		compile project(':storm')
	}
}

project(':storm-processing') { 
	dependencies { 
		compile project(':common')
		compile project(':data')
		compile project(':storm')
		compile project(':usage')
		compile project(':message')
	}
}

project(':websocket') {
	dependencies {
		compile project(':common')
		compile project(':rest')
	}
}

project(':websocket-app') {
	dependencies {
		compile project(':common')
		compile project(':websocket')
		compile project(':app')
		compile project(':data-dynamodb')
	}
}

project(':websocket-device') {
	dependencies {
		compile project(':common')
		compile project(':websocket')
		compile project(':device')
		compile project(':records')
		compile project(':usage')
	}
}
