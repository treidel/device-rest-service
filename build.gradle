/*
def versionOverrides = [
	"org.springframework:spring-core": "4.1.6.RELEASE",
	"org.springframework:spring-tx": "4.1.6.RELEASE",
	"org.springframework:spring-aop": "4.1.6.RELEASE",
	"org.springframework:spring-context": "4.1.6.RELEASE",
	"org.springframework:spring-jms": "4.1.6.RELEASE",
	"org.springframework:spring-web": "4.1.6.RELEASE",
	"org.springframework:spring-webmvc": "4.1.6.RELEASE",
	"org.springframework:spring-test" : "4.1.6.RELEASE",
	"org.springframework:spring-beans": "4.1.6.RELEASE",	
	"org.springframework:spring-websocket": "4.1.6.RELEASE",	
	"org.springframework:spring-messaging": "4.1.6.RELEASE",
	"org.springframework.data:spring-data-commons":"1.8.0.RELEASE",
	"org.springframework.hateoas:spring-hateoas":"0.16.0.RELEASE",
	"org.springframework.plugin:spring-plugin-core":"1.1.0.RELEASE",
	"org.springframework.security:spring-security-core":"4.0.0.RELEASE",
	"org.springframework.security:spring-security-config":"4.0.0.RELEASE",
	"org.springframework.security:spring-security-web":"4.0.0.RELEASE",	
	"org.springframework.security:spring-security-messaging":"4.0.0.RELEASE",
	"org.springframework.session:spring-session":"1.0.0.RELEASE",
	"org.springframework.boot:spring-boot-gradle-plugin":"1.1.8.RELEASE",
	"org.springframework.boot:spring-boot-starter":"1.1.8.RELEASE",
	"org.springframework.boot:spring-boot-starter-test":"1.1.8.RELEASE",
	"org.springframework.boot:spring-boot-starter-websocket":"1.1.8.RELEASE",
	"org.springframework.boot:spring-boot-starter-tomcat":"1.1.8.RELEASE", 
	"org.apache.activemq:activemq-spring" : "5.10.1",
	"org.apache.storm:storm-core" : "0.9.4",
	"org.apache.storm:storm-kafka" : "0.9.4",
	"org.apache.curator:curator-framework" : "2.6.0",
	"org.apache.commons:commons-lang3" : "3.3.2",
	"org.apache.httpcomponents:httpclient" : "4.3.2",
	"org.apache.httpcomponents:httpcore" : "4.3.2",
	"org.apache.james:apache-mime4j":"0.7.2",
	"org.eclipse.jetty.websocket:websocket-client":"9.2.8.v20150217",
	"org.slf4j:slf4j-api":"1.7.7",
	"org.slf4j:slf4j-log4j12":"1.7.7",
	"org.codehaus.groovy:groovy-all" : "2.4.3",
	"com.jayway.jsonpath:json-path":"0.9.1",	
	"com.amazonaws:aws-java-sdk" : "1.9.16",
	"com.amazonaws:aws-java-sdk-dynamodb" : "1.9.16",
	"com.amazonaws:aws-java-sdk-kinesis" : "1.9.16",
	"com.amazonaws:kinesis-storm-spout":"1.1.0",	
	"com.esotericsoftware.kryo:kryo" : "2.21",	
	"com.h2database:h2" : "1.4.185",
	"com.fasterxml.jackson.core:jackson-databind" : "2.4.5",
	"com.fasterxml.jackson.datatype:jackson-datatype-joda" : "2.4.5",
	"com.rabbitmq:amqp-client" : "3.4.3",	
	"com.beust:jcommander":"1.35",
	"commons-beanutils:commons-beanutils":"1.9.2",	
	"ch.qos.logback:logback-classic" : "1.1.3",
	"ch.qos.logback:logback-access" : "1.1.3",
	"org.logback-extensions:logback-ext-loggly" : "0.1.2",		
	"joda-type:joda-time" : "2.7",	
	"junit:junit":"4.12"
]
*/

subprojects {
	apply plugin: 'java'
	group = 'com.fancypants'
	version = '1.0'
	
	/* define the versions of the major libraries we are using */
	ext {    
        springVersion = "4.1.6.RELEASE"
        springDataVersion = "1.8.0.RELEASE"
        springHateosVersion = "0.16.0.RELEASE"
        springBootVersion = "1.1.8.RELEASE"
        springPluginVersion = "1.1.0.RELEASE"
        springSecurityVersion = "4.0.0.RELEASE"
        springSessionVersion = "1.0.0.RELEASE"
        junitVersion = "4.12"
        rabbitmqVersion = "3.5.2"
        apacheStormVersion = "0.9.4"
        apacheCuratorVersion = "2.6.0"
        apacheCommonsVersion = "3.3.2"
        apacheJamesVersion = "0.7.2"
        jettyVersion = "9.2.8.v20150217"
        slf4jVersion = "1.7.7"
        groovyVersion = "2.4.3"
        jsonpathVersion = "0.9.1"
        amazonAwsVersion = "1.9.16"
        amazonKinesisStormSpoutVersion = "1.1.0" 
        kryoVersion = "2.21"
        h2databaseVersion = "1.4.185"
        jacksonVersion = "2.4.5"
        rabbitmqVersion = "3.4.3"
        logbackVersion = "1.1.3"
        logbackExtensionsVersion = "0.1.2"
        beanutilsVersion = "1.9.2"
        jodatimeVersion = "2.7"
        gradleDockerVersion = "1.2"
        kafkaVersion = "0.8.2.1"
    }

	repositories {
		mavenCentral()
		maven { url "http://repo.spring.io/libs-release" }
    	maven { url "http://clojars.org/repo" }
	}
	
	/* disable transitive dependencies for all configurations by default */
	configurations.all {
		transitive = false
	}
	/* for test configurations let gradle manage dependencies */
	configurations.testCompile {
		transitive = true
	}
	configurations.testRuntime {
		transitive = true
	}
}

project(':data') { 
	dependencies {
		compile project(':common')
	}
}

project(':data-dynamodb') {
	dependencies {
		compile project(':common')
		compile project(':data')
	}
}

project(':rest') {
	dependencies {
		compile project(':common')
		compile project(':data')
		compile project(':device')
	}
}

project(':stream') {	
	dependencies {
		compile project(':common')
		testCompile project(':data')
	}
}

project(':stream-kinesis') {
	dependencies {
		compile project(':common')
		compile project(':stream')
		compile project(':data')
	}
}

project(':message') {
	dependencies {
		compile project(':common')
	}
}

project(':message-rabbitmq') {
	dependencies {
		compile project(':common')
		compile project(':message')
	}
}

project(':device') { 
	dependencies {
		compile project(':common')
		compile project(':data')
		compile project(':stream')
		compile project(':message')
	}
}

project(':records') { 
	dependencies {
		compile project(':common')
		compile project(':device')
	}
}

project(':usage') {
	dependencies {
		compile project(':common')
		compile project(':device')
	}
}

project(':app') {
	dependencies {
		compile project(':common')
		compile project(':data')
		compile project(':device')
	}
}

project(':rest-app') {
	dependencies {
		compile project(':common')
		compile project(':rest')
		compile project(':app')
		compile project(':usage')
		compile project(':data')
	}
}

project(':storm') {
	dependencies {
		compile project(':common')
		compile project(':records')
	}
}

project(':storm-kinesis') {
	dependencies {
		compile project(':common')
		compile project(':storm')
	}
}

project(':storm-kafka') {
	dependencies {
		compile project(':common')
		compile project(':storm')
	}
}

project(':storm-duplicate') { 
	dependencies { 
		compile project(':common')
		compile project(':data')
		compile project(':storm')
	}
}

project(':storm-usage') { 
	dependencies { 
		compile project(':common')
		compile project(':data')
		compile project(':storm')
		compile project(':usage')
		compile project(':message')
	}
}

project(':websocket') {
	dependencies {
		compile project(':common')
		compile project(':rest')
	}
}

project(':websocket-app') {
	dependencies {
		compile project(':common')
		compile project(':websocket')
		compile project(':app')
		compile project(':data')
	}
}

project(':websocket-device') {
	dependencies {
		compile project(':common')
		compile project(':websocket')
		compile project(':device')
		compile project(':records')
		compile project(':usage')
		compile project(':data')
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

